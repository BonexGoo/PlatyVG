<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="px_8hpp" kind="file" language="C++">
    <compoundname>px.hpp</compoundname>
    <includedby refid="platyvg_8hpp" local="yes">platyvg.hpp</includedby>
    <includedby refid="memory_8hpp" local="yes">memory.hpp</includedby>
    <includedby refid="file_8hpp" local="yes">file.hpp</includedby>
    <includedby refid="math_8hpp" local="yes">math.hpp</includedby>
    <includedby refid="px_8cpp" local="yes">px.cpp</includedby>
    <invincdepgraph>
      <node id="926">
        <label>adapter.hpp</label>
        <link refid="adapter_8hpp_source"/>
        <childnode refid="927" relation="include">
        </childnode>
      </node>
      <node id="945">
        <label>mesh.hpp</label>
        <link refid="mesh_8hpp_source"/>
        <childnode refid="926" relation="include">
        </childnode>
        <childnode refid="927" relation="include">
        </childnode>
      </node>
      <node id="941">
        <label>point.hpp</label>
        <link refid="point_8hpp_source"/>
        <childnode refid="942" relation="include">
        </childnode>
        <childnode refid="937" relation="include">
        </childnode>
        <childnode refid="944" relation="include">
        </childnode>
        <childnode refid="927" relation="include">
        </childnode>
        <childnode refid="938" relation="include">
        </childnode>
        <childnode refid="943" relation="include">
        </childnode>
        <childnode refid="933" relation="include">
        </childnode>
        <childnode refid="930" relation="include">
        </childnode>
      </node>
      <node id="930">
        <label>view.hpp</label>
        <link refid="view_8hpp_source"/>
      </node>
      <node id="946">
        <label>size.hpp</label>
        <link refid="size_8hpp_source"/>
        <childnode refid="943" relation="include">
        </childnode>
        <childnode refid="927" relation="include">
        </childnode>
        <childnode refid="930" relation="include">
        </childnode>
        <childnode refid="935" relation="include">
        </childnode>
      </node>
      <node id="948">
        <label>export.hpp</label>
        <link refid="export_8hpp_source"/>
      </node>
      <node id="925">
        <label>platyvg.hpp</label>
        <link refid="platyvg_8hpp_source"/>
        <childnode refid="926" relation="include">
        </childnode>
        <childnode refid="931" relation="include">
        </childnode>
        <childnode refid="936" relation="include">
        </childnode>
        <childnode refid="940" relation="include">
        </childnode>
        <childnode refid="945" relation="include">
        </childnode>
        <childnode refid="942" relation="include">
        </childnode>
        <childnode refid="941" relation="include">
        </childnode>
        <childnode refid="930" relation="include">
        </childnode>
        <childnode refid="937" relation="include">
        </childnode>
        <childnode refid="929" relation="include">
        </childnode>
        <childnode refid="928" relation="include">
        </childnode>
        <childnode refid="927" relation="include">
        </childnode>
        <childnode refid="932" relation="include">
        </childnode>
        <childnode refid="944" relation="include">
        </childnode>
        <childnode refid="938" relation="include">
        </childnode>
        <childnode refid="943" relation="include">
        </childnode>
        <childnode refid="946" relation="include">
        </childnode>
        <childnode refid="947" relation="include">
        </childnode>
        <childnode refid="934" relation="include">
        </childnode>
        <childnode refid="933" relation="include">
        </childnode>
        <childnode refid="935" relation="include">
        </childnode>
        <childnode refid="948" relation="include">
        </childnode>
        <childnode refid="939" relation="include">
        </childnode>
        <childnode refid="949" relation="include">
        </childnode>
      </node>
      <node id="937">
        <label>device.hpp</label>
        <link refid="device_8hpp_source"/>
        <childnode refid="930" relation="include">
        </childnode>
      </node>
      <node id="952">
        <label>share.hpp</label>
        <link refid="share_8hpp_source"/>
        <childnode refid="953" relation="include">
        </childnode>
        <childnode refid="925" relation="include">
        </childnode>
      </node>
      <node id="953">
        <label>array.hpp</label>
        <link refid="array_8hpp_source"/>
        <childnode refid="925" relation="include">
        </childnode>
        <childnode refid="954" relation="include">
        </childnode>
      </node>
      <node id="943">
        <label>rect.hpp</label>
        <link refid="rect_8hpp_source"/>
        <childnode refid="938" relation="include">
        </childnode>
        <childnode refid="929" relation="include">
        </childnode>
        <childnode refid="935" relation="include">
        </childnode>
      </node>
      <node id="933">
        <label>action.hpp</label>
        <link refid="action_8hpp_source"/>
        <childnode refid="934" relation="include">
        </childnode>
      </node>
      <node id="955">
        <label>parser.hpp</label>
        <link refid="parser_8hpp_source"/>
        <childnode refid="925" relation="include">
        </childnode>
      </node>
      <node id="927">
        <label>shape.hpp</label>
        <link refid="shape_8hpp_source"/>
        <childnode refid="928" relation="include">
        </childnode>
        <childnode refid="930" relation="include">
        </childnode>
      </node>
      <node id="924">
        <label>px.hpp</label>
        <link refid="px.hpp"/>
        <childnode refid="925" relation="include">
        </childnode>
        <childnode refid="950" relation="include">
        </childnode>
        <childnode refid="956" relation="include">
        </childnode>
        <childnode refid="957" relation="include">
        </childnode>
      </node>
      <node id="931">
        <label>color.hpp</label>
        <link refid="color_8hpp_source"/>
        <childnode refid="926" relation="include">
        </childnode>
        <childnode refid="932" relation="include">
        </childnode>
        <childnode refid="933" relation="include">
        </childnode>
        <childnode refid="935" relation="include">
        </childnode>
      </node>
      <node id="932">
        <label>context.hpp</label>
        <link refid="context_8hpp_source"/>
        <childnode refid="927" relation="include">
        </childnode>
        <childnode refid="930" relation="include">
        </childnode>
      </node>
      <node id="928">
        <label>layer.hpp</label>
        <link refid="layer_8hpp_source"/>
        <childnode refid="929" relation="include">
        </childnode>
      </node>
      <node id="956">
        <label>file.hpp</label>
        <link refid="file_8hpp_source"/>
        <childnode refid="925" relation="include">
        </childnode>
      </node>
      <node id="940">
        <label>matrix.hpp</label>
        <link refid="matrix_8hpp_source"/>
        <childnode refid="926" relation="include">
        </childnode>
        <childnode refid="941" relation="include">
        </childnode>
        <childnode refid="927" relation="include">
        </childnode>
      </node>
      <node id="954">
        <label>string.hpp</label>
        <link refid="string_8hpp_source"/>
        <childnode refid="955" relation="include">
        </childnode>
        <childnode refid="925" relation="include">
        </childnode>
      </node>
      <node id="934">
        <label>record.hpp</label>
        <link refid="record_8hpp_source"/>
        <childnode refid="929" relation="include">
        </childnode>
      </node>
      <node id="950">
        <label>memory.hpp</label>
        <link refid="memory_8hpp_source"/>
        <childnode refid="951" relation="include">
        </childnode>
        <childnode refid="925" relation="include">
        </childnode>
      </node>
      <node id="935">
        <label>command.hpp</label>
        <link refid="command_8hpp_source"/>
      </node>
      <node id="957">
        <label>math.hpp</label>
        <link refid="math_8hpp_source"/>
        <childnode refid="925" relation="include">
        </childnode>
      </node>
      <node id="929">
        <label>document.hpp</label>
        <link refid="document_8hpp_source"/>
        <childnode refid="930" relation="include">
        </childnode>
      </node>
      <node id="942">
        <label>zoom.hpp</label>
        <link refid="zoom_8hpp_source"/>
        <childnode refid="926" relation="include">
        </childnode>
        <childnode refid="943" relation="include">
        </childnode>
        <childnode refid="927" relation="include">
        </childnode>
        <childnode refid="928" relation="include">
        </childnode>
        <childnode refid="929" relation="include">
        </childnode>
        <childnode refid="935" relation="include">
        </childnode>
      </node>
      <node id="938">
        <label>selector.hpp</label>
        <link refid="selector_8hpp_source"/>
        <childnode refid="927" relation="include">
        </childnode>
      </node>
      <node id="947">
        <label>table.hpp</label>
        <link refid="table_8hpp_source"/>
        <childnode refid="938" relation="include">
        </childnode>
      </node>
      <node id="951">
        <label>buffer.hpp</label>
        <link refid="buffer_8hpp_source"/>
        <childnode refid="952" relation="include">
        </childnode>
        <childnode refid="925" relation="include">
        </childnode>
      </node>
      <node id="944">
        <label>edge.hpp</label>
        <link refid="edge_8hpp_source"/>
        <childnode refid="927" relation="include">
        </childnode>
      </node>
      <node id="949">
        <label>listener.hpp</label>
        <link refid="listener_8hpp_source"/>
      </node>
      <node id="939">
        <label>input.hpp</label>
        <link refid="input_8hpp_source"/>
      </node>
      <node id="936">
        <label>coord.hpp</label>
        <link refid="coord_8hpp_source"/>
        <childnode refid="926" relation="include">
        </childnode>
        <childnode refid="937" relation="include">
        </childnode>
        <childnode refid="927" relation="include">
        </childnode>
        <childnode refid="938" relation="include">
        </childnode>
        <childnode refid="930" relation="include">
        </childnode>
        <childnode refid="939" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="class_px_1_1_string_for_platform" prot="public">Px::StringForPlatform</innerclass>
    <innerclass refid="class_px_1_1_byte_array_for_platform" prot="public">Px::ByteArrayForPlatform</innerclass>
    <innernamespace refid="namespace_px">Px</innernamespace>
      <sectiondef kind="define">
      <memberdef kind="define" id="px_8hpp_1abb7ba484fe866e26bb41286285f632ff" prot="public" static="no">
        <name>NEEDS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" line="104" column="11" bodyfile="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="px_8hpp_1ac84c3c4d5e70daaaf452cd30d5563357" prot="public" static="no">
        <name>NEEDS_DBG_PRM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" line="105" column="10" bodyfile="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="px_8hpp_1aa5d626f3c9b7bf907259fe25f4dac00f" prot="public" static="no">
        <name>NEEDS_DBG_VAL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" line="106" column="10" bodyfile="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="px_8hpp_1a20ed31297d4aa9f0c301c8af0b43e8e2" prot="public" static="no">
        <name>NEEDS_DBG_INT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" line="107" column="10" bodyfile="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" bodystart="107" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="px_8hpp_1a58767cd74a685348b2164e737ec0fb24" prot="public" static="no">
        <name>NEEDS_DBG_ARG</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" line="108" column="10" bodyfile="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="px_8hpp_1ab2e4216763879f2fde9e27ea29c1ee36" prot="public" static="no">
        <name>NEEDS_DBG_FILE</name>
        <initializer>&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" line="109" column="10" bodyfile="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="px_8hpp_1a5ba03653024e66cf63bbb9e938e1c885" prot="public" static="no">
        <name>NEEDS_DBG_LINE</name>
        <initializer>-1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" line="110" column="10" bodyfile="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" bodystart="110" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="px_8hpp_1a095b739cc1c21cb42d377a86510754bd" prot="public" static="no">
        <name>NEEDS_DBG_FUNC</name>
        <initializer>&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" line="111" column="10" bodyfile="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="px_8hpp_1ac55a57b740a18e2e50e810481a95fca5" prot="public" static="no">
        <name>PX_API</name>
        <param><defname>TYPE</defname></param>
        <param><defname>FUNC</defname></param>
        <param><defname>...</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" line="156" column="11" bodyfile="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" bodystart="156" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="px_8hpp_1ab5158ee0645b9a28787980b5dd02999d" prot="public" static="no">
        <name>PX_API_VOID</name>
        <param><defname>TYPE</defname></param>
        <param><defname>FUNC</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" line="157" column="13" bodyfile="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="px_8hpp_1abf9eaf191093fd93becbff4ebd93fe55" prot="public" static="no">
        <name>PX_API_IMPL</name>
        <param><defname>CODE</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" line="158" column="10" bodyfile="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" bodystart="158" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="px_8hpp_1ae3651b93f7b7279e1d23e31a3ba35f42" prot="public" static="no">
        <name>PX_API_IMPL_RETURN</name>
        <param><defname>...</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" line="159" column="13" bodyfile="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" bodystart="159" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="px_8hpp_1ac894180e9c178f0e4c17c688ea374197" prot="public" static="no">
        <name>PX_API_IMPL_RESULTS</name>
        <param><defname>CODE</defname></param>
        <param><defname>...</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" line="160" column="13" bodyfile="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" bodystart="160" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="px_8hpp_1aa6b336d59fd0ceb434b49abaed66eb7c" prot="public" static="no">
        <name>PTR_TO_SBLOCK</name>
        <param><defname>VALUE</defname></param>
        <initializer>((sblock) VALUE)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" line="167" column="11" bodyfile="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="px_8hpp_1af1f5f668b061af269cc935bb7a46a03f" prot="public" static="no">
        <name>__SIZE_T__</name>
        <initializer>unsigned int</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" line="168" column="10" bodyfile="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="px_8hpp_1a0547ce31be2118f777f7a5cc049da313" prot="public" static="no">
        <name>PX_ASSERT</name>
        <param><defname>TEXT</defname></param>
        <param><defname>FLAG</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" line="181" column="11" bodyfile="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" bodystart="181" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="px_8hpp_1a3cf56b81f40c30dc7ab59656da5282b6" prot="public" static="no">
        <name>PX_TRACE</name>
        <param><defname>...</defname></param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" line="182" column="10" bodyfile="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" bodystart="182" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="px_8hpp_1a3f98cda95f4eceaeac53c13f97aec230" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void* operator new</definition>
        <argsstring>(__SIZE_T__, sblock ptr)</argsstring>
        <name>operator new</name>
        <param>
          <type>__SIZE_T__</type>
        </param>
        <param>
          <type>sblock</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" line="171" column="1" bodyfile="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" bodystart="171" bodyend="171"/>
      </memberdef>
      <memberdef kind="function" id="px_8hpp_1a834fc5f7c0d872ee2d3ded3618cb84f9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void *</type>
        <definition>void* operator new[]</definition>
        <argsstring>(__SIZE_T__, sblock ptr)</argsstring>
        <name>operator new[]</name>
        <param>
          <type>__SIZE_T__</type>
        </param>
        <param>
          <type>sblock</type>
          <declname>ptr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" line="172" column="1" bodyfile="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" bodystart="172" bodyend="172"/>
      </memberdef>
      <memberdef kind="function" id="px_8hpp_1a67efa27cc9c18b43560c84c0ea22812a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void operator delete</definition>
        <argsstring>(void *, sblock)</argsstring>
        <name>operator delete</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>sblock</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" line="173" column="1" bodyfile="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" bodystart="173" bodyend="173"/>
      </memberdef>
      <memberdef kind="function" id="px_8hpp_1a3558c6b75083054c422955db78a94bb8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void operator delete[]</definition>
        <argsstring>(void *, sblock)</argsstring>
        <name>operator delete[]</name>
        <param>
          <type>void *</type>
        </param>
        <param>
          <type>sblock</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" line="174" column="1" bodyfile="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp" bodystart="174" bodyend="174"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#pragma<sp/>once</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_px" kindref="compound">Px</ref><sp/>{}</highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_px" kindref="compound">Px</ref>;</highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal"><ref refid="namespace_px" kindref="compound">Px</ref></highlight></codeline>
<codeline lineno="7"><highlight class="normal">{</highlight></codeline>
<codeline lineno="8"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sint08;</highlight></codeline>
<codeline lineno="9"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint08;</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sint16;</highlight></codeline>
<codeline lineno="11"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>uint16;</highlight></codeline>
<codeline lineno="12"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sint32;</highlight></codeline>
<codeline lineno="13"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sint64;</highlight></codeline>
<codeline lineno="15"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><sp/>uint64;</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sint08*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>chars;</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>uint08*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes;</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sint64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linkstep1;</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sint64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linkstep2;</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sint64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linkstep3;</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sint64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linkstep4;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sint64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linkstep5;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sint64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linkstep6;</highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sint64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linkstep7;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sint64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linkstep8;</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sint64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>linkstep9;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>About<sp/>Buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#if<sp/>defined(__x86_64__)<sp/>||<sp/>defined(__amd64__)<sp/>||<sp/>defined(__LP64__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>sint64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sblock;</highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ublock;</highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>sint32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sblock;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ublock;</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>sblock*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nakedbuffer;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>ublock*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>buffer;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>About<sp/>Platform<sp/>API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>sint32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api_autorun;</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>ANDROID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>sint32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api_int;</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api_uint;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>sint32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api_flag;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>sint32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api_enum;</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>sint64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api_long;</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api_float;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api_string;</highlight></codeline>
<codeline lineno="49"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api_bytes;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api_floats;</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api_results;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>sint32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api_int;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>uint32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api_uint;</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>sint32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api_flag;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>sint32<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api_enum;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>sint64<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api_long;</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api_float;</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>chars<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api_string;</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>bytes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api_bytes;</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/>api_floats;</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>chars<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>api_results;</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>api_autorun<sp/>CollectForPlatform(chars<sp/>type,<sp/>chars<sp/>name,<sp/>chars<sp/>param);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>ReadyForPlatform(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>env);</highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>api_string<sp/>ReturnForPlatform(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>env,<sp/>chars<sp/>data);</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/>api_floats<sp/>ReturnForPlatform(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>env,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal">*<sp/>data,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/>sint32<sp/>len);</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/>api_results<sp/>ResultsForPlatform(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>env,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>temp,<sp/>uint32<sp/>a,<sp/>uint32<sp/>b);</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/>api_results<sp/>ResultsForPlatform(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>env,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>temp,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>c);</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>api_results<sp/>ResultsForPlatform(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>env,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>temp,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>a,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>b,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>c,<sp/></highlight><highlight class="keywordtype">float</highlight><highlight class="normal"><sp/>d);</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74" refid="class_px_1_1_string_for_platform" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_px_1_1_string_for_platform" kindref="compound">StringForPlatform</ref></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:<sp/>chars<sp/>Utf8;</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>Env;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:<sp/>api_string<sp/>Str;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/><ref refid="class_px_1_1_string_for_platform" kindref="compound">StringForPlatform</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>env,<sp/>api_string<sp/>str);</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/>~<ref refid="class_px_1_1_string_for_platform" kindref="compound">StringForPlatform</ref>();</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>chars()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="83" refid="class_px_1_1_byte_array_for_platform" refkind="compound"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">class<sp/></highlight><highlight class="normal"><ref refid="class_px_1_1_byte_array_for_platform" kindref="compound">ByteArrayForPlatform</ref></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:<sp/>bytes<sp/>Bytes;</highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>Env;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">private</highlight><highlight class="normal">:<sp/>api_bytes<sp/>Brr;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/><ref refid="class_px_1_1_byte_array_for_platform" kindref="compound">ByteArrayForPlatform</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>env,<sp/>api_bytes<sp/>brr);</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/>~<ref refid="class_px_1_1_byte_array_for_platform" kindref="compound">ByteArrayForPlatform</ref>();</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">public</highlight><highlight class="normal">:<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/>bytes()<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PX_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NEEDS<sp/>__FILE__,__LINE__,__FUNCTION__,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NEEDS_DBG_PRM<sp/>chars<sp/>file,const<sp/>int<sp/>line,chars<sp/>func,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NEEDS_DBG_VAL<sp/>chars<sp/>File;const<sp/>int<sp/>Line;chars<sp/>Func;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NEEDS_DBG_INT<sp/>File(file),Line(line),Func(func),</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NEEDS_DBG_ARG<sp/>file,line,func,</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NEEDS_DBG_FILE<sp/>file</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NEEDS_DBG_LINE<sp/>line</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NEEDS_DBG_FUNC<sp/>func</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NEEDS</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NEEDS_DBG_PRM</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NEEDS_DBG_VAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NEEDS_DBG_INT</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NEEDS_DBG_ARG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NEEDS_DBG_FILE<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NEEDS_DBG_LINE<sp/>-1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>NEEDS_DBG_FUNC<sp/>&quot;&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>PX_BUILD_API</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#ifdef<sp/>ANDROID</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>PX_API_FUNC(TYPE,<sp/>FUNC)<sp/>\</highlight></codeline>
<codeline lineno="117"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extern<sp/>&quot;C&quot;<sp/>TYPE<sp/>Java_com_##PX_BUILD_API##_##FUNC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>PX_API(TYPE,<sp/>FUNC,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="119"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>api_autorun<sp/>API_##FUNC<sp/>=<sp/>CollectForPlatform(#TYPE,<sp/>#FUNC,<sp/>#__VA_ARGS__);<sp/>\</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PX_API_FUNC(TYPE,<sp/>FUNC)(void*<sp/>env,<sp/>void*,<sp/>__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>PX_API_VOID(TYPE,<sp/>FUNC)<sp/>\</highlight></codeline>
<codeline lineno="122"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>api_autorun<sp/>API_##FUNC<sp/>=<sp/>CollectForPlatform(#TYPE,<sp/>#FUNC,<sp/>&quot;void&quot;);<sp/>\</highlight></codeline>
<codeline lineno="123"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PX_API_FUNC(TYPE,<sp/>FUNC)(void*<sp/>env,<sp/>void*)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>PX_API_ENV<sp/>env</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>PX_API_FUNC(TYPE,<sp/>FUNC)<sp/>\</highlight></codeline>
<codeline lineno="127"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extern<sp/>&quot;C&quot;<sp/>__declspec(dllexport)<sp/>TYPE<sp/>FUNC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>PX_API(TYPE,<sp/>FUNC,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="129"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>api_autorun<sp/>API_##FUNC<sp/>=<sp/>CollectForPlatform(#TYPE,<sp/>#FUNC,<sp/>#__VA_ARGS__);<sp/>\</highlight></codeline>
<codeline lineno="130"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PX_API_FUNC(TYPE,<sp/>FUNC)(__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>PX_API_VOID(TYPE,<sp/>FUNC)<sp/>\</highlight></codeline>
<codeline lineno="132"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>api_autorun<sp/>API_##FUNC<sp/>=<sp/>CollectForPlatform(#TYPE,<sp/>#FUNC,<sp/>&quot;void&quot;);<sp/>\</highlight></codeline>
<codeline lineno="133"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>PX_API_FUNC(TYPE,<sp/>FUNC)()</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>#define<sp/>PX_API_ENV<sp/>nullptr</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>PX_API_IMPL(CODE)<sp/>\</highlight></codeline>
<codeline lineno="137"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="138"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReadyForPlatform(PX_API_ENV);<sp/>\</highlight></codeline>
<codeline lineno="139"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CODE;<sp/>\</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>PX_API_IMPL_RETURN(...)<sp/>\</highlight></codeline>
<codeline lineno="142"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="143"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReadyForPlatform(PX_API_ENV);<sp/>\</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>ReturnForPlatform(PX_API_ENV,<sp/>__VA_ARGS__);<sp/>\</highlight></codeline>
<codeline lineno="145"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>PX_API_IMPL_RESULTS(CODE,<sp/>...)<sp/>\</highlight></codeline>
<codeline lineno="147"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/>\</highlight></codeline>
<codeline lineno="148"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ReadyForPlatform(PX_API_ENV);<sp/>\</highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>CODE;<sp/>\</highlight></codeline>
<codeline lineno="150"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>static<sp/>char<sp/>temp[1024];<sp/>\</highlight></codeline>
<codeline lineno="151"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>ResultsForPlatform(PX_API_ENV,<sp/>temp,<sp/>__VA_ARGS__);<sp/>\</highlight></codeline>
<codeline lineno="152"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>PX_API_STR(STR)<sp/>StringForPlatform(PX_API_ENV,<sp/>STR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>PX_API_BRR(BRR)<sp/>ByteArrayForPlatform(PX_API_ENV,<sp/>BRR)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>PX_API(TYPE,<sp/>FUNC,<sp/>...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>PX_API_VOID(TYPE,<sp/>FUNC)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>PX_API_IMPL(CODE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>PX_API_IMPL_RETURN(...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>PX_API_IMPL_RESULTS(CODE,<sp/>...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>__APPLE__<sp/>==<sp/>1</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>PTR_TO_SBLOCK(VALUE)<sp/>((sblock)(sint64)<sp/>VALUE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>__SIZE_T__<sp/>unsigned<sp/>long</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>PTR_TO_SBLOCK(VALUE)<sp/>((sblock)<sp/>VALUE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>__SIZE_T__<sp/>unsigned<sp/>int</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">(__SIZE_T__,<sp/>sblock<sp/>ptr)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>ptr;}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">new</highlight><highlight class="normal">[](__SIZE_T__,<sp/>sblock<sp/>ptr)<sp/>{</highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>ptr;}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/>sblock)<sp/>{}</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keyword">inline</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">operator</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">delete</highlight><highlight class="normal">[](</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/>sblock)<sp/>{}</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__BX_APPLICATION</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#include<sp/>&lt;BxCore.hpp&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>PX_ASSERT(TEXT,<sp/>FLAG)<sp/>BxASSERT(&quot;PX&lt;&quot;<sp/>TEXT<sp/>&quot;&gt;&quot;,<sp/>FLAG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>PX_TRACE(...)<sp/>BxCore::System::Trace(__VA_ARGS__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>PX_ASSERT(TEXT,<sp/>FLAG)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor"><sp/><sp/><sp/><sp/>#define<sp/>PX_TRACE(...)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="Z:/Users/bonex/Bonexpecial/Team_Onezay/Project/BxProject/PlatyVG/source/px/px.hpp"/>
  </compounddef>
</doxygen>
